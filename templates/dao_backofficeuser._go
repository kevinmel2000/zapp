package dao

import (
	"github.com/jinzhu/gorm"
	"{{PackageName}}/model"
)

// IBackofficeUserDao is
type IBackofficeUserDao interface {
	Create(dc model.DaoContext, bu *model.BackofficeUser) error
	GetAll(dc model.DaoContext, req model.GetAllBasicRequest) ([]model.BackofficeUser, uint64)
	GetOneByEmail(dc model.DaoContext, email string) *model.BackofficeUser
	GetOneByID(dc model.DaoContext, id string) *model.BackofficeUser
	Delete(dc model.DaoContext, ID string) error
	Update(dc model.DaoContext, obj *model.BackofficeUser) error
}

// BackofficeUserDao is
type BackofficeUserDao struct {
}

func (b *BackofficeUserDao) GetAll(dc model.DaoContext, req model.GetAllBasicRequest) ([]model.BackofficeUser, uint64) {

	return nil, 0
}

func (b *BackofficeUserDao) Create(dc model.DaoContext, bu *model.BackofficeUser) error {
	return dc.(*gorm.DB).Create(bu).Error
}

func (b *BackofficeUserDao) GetOneByEmail(dc model.DaoContext, email string) *model.BackofficeUser {
	var obj model.BackofficeUser
	dc.(*gorm.DB).First(&obj, "email = ?", email)
	if obj.ID == "" {
		return nil
	}
	return &obj
}

func (b *BackofficeUserDao) GetOneByID(dc model.DaoContext, id string) *model.BackofficeUser {
	var obj model.BackofficeUser
	dc.(*gorm.DB).First(&obj, "id = ?", id)
	if obj.ID == "" {
		return nil
	}
	return &obj
}

func (b *BackofficeUserDao) Delete(dc model.DaoContext, id string) error {
	return dc.(*gorm.DB).Delete(model.BackofficeUser{}, "id = ?", id).Error
}

func (b *BackofficeUserDao) Update(dc model.DaoContext, obj *model.BackofficeUser) error {
	return dc.(*gorm.DB).Save(obj).Error
}
