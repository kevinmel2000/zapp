package dao

import (
	"github.com/jinzhu/gorm"
	"{{PackageName}}/model"
)

// IUserDao is
type IUserDao interface {
	Create(dc model.DaoContext, bu *model.User) error
	GetAll(dc model.DaoContext, req model.GetAllBasicRequest) ([]model.User, uint64)
	GetOneByEmail(dc model.DaoContext, email string) *model.User
	GetOneByID(dc model.DaoContext, id string) *model.User
	Delete(dc model.DaoContext, ID string) error
	Update(dc model.DaoContext, obj *model.User) error
}

// UserDao is
type UserDao struct {
}

func (b *UserDao) GetAll(dc model.DaoContext, req model.GetAllBasicRequest) ([]model.User, uint64) {

	return nil, 0
}

func (b *UserDao) Create(dc model.DaoContext, bu *model.User) error {
	return dc.(*gorm.DB).Create(bu).Error
}

func (b *UserDao) GetOneByEmail(dc model.DaoContext, email string) *model.User {
	var obj model.User
	dc.(*gorm.DB).First(&obj, "email = ?", email)
	if obj.ID == "" {
		return nil
	}
	return &obj
}

func (b *UserDao) GetOneByID(dc model.DaoContext, id string) *model.User {
	var obj model.User
	dc.(*gorm.DB).First(&obj, "id = ?", id)
	if obj.ID == "" {
		return nil
	}
	return &obj
}

func (b *UserDao) Delete(dc model.DaoContext, id string) error {
	return dc.(*gorm.DB).Delete(model.User{}, "id = ?", id).Error
}

func (b *UserDao) Update(dc model.DaoContext, obj *model.User) error {
	return dc.(*gorm.DB).Save(obj).Error
}
