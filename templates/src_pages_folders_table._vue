<template>
  <div>
    <b-container fluid>      

      <div style="margin-bottom:20px; margin-top:20px">
        <!-- Button New -->
        <b-button variant="success" size="sm" v-b-modal.dialogInput>New {{PascalCase .Name}}</b-button>
        <b-button variant="info" style="margin-left:10px" size="sm" @click="reload">Refresh</b-button>

        <!-- paging -->
        <div class="float-right">
          <b-pagination size="sm" @input="reload" v-model="paging.page" :total-rows="paging.total" :per-page="paging.size"></b-pagination>
        </div>
      </div>

      <!-- Dialog -->
      <dialog-input :input="selectedItem" @closed="dialogClosed"></dialog-input>

      <!-- Tabel -->
      <b-table small striped hover :items="items" :fields="fields" :sort-by.sync="sorting.byField" :sort-desc.sync="sorting.isDesc" :no-local-sorting="true" @sort-changed="sortingChanged">
        <template slot="HEAD_action">
          <b-button variant="warning" @click="resetSorting" size="sm">Reset Sorting</b-button>
        </template> 
        <template slot="HEAD_index">
          #
        </template> 
        <template slot="index" slot-scope="data">
          {{"{{"}} data.index + 1 {{"}}"}}
        </template>        
        <template slot="top-row" slot-scope="{ fields }">
          <td v-for="field in fields" :key="field.key">
            <b-button variant="warning" @click="resetFilter" v-if="field.key === 'action'" size="sm">Reset Filtering</b-button>
            <b-form-input v-if="field.key !== 'action' && field.key !== 'index'" size="sm" v-model="filtering[field.key]" :placeholder="field.label" @input="reload" trim> </b-form-input>
          </td>
        </template> 
        <template slot="action" slot-scope="data">
          <b-button-group>
            <b-button v-b-modal.dialogInput @click="selectedItem=data.item" size="sm" variant="primary">Edit</b-button>
            <b-button @click="deleteItem(data.item)" size="sm" variant="danger">Delete</b-button>
          </b-button-group>
        </template>        
      </b-table>
    </b-container>    
  </div>
</template>

<script>

import DialogInput from './input'

export default {
  components: {
    DialogInput,
  },
  created () {
    if (this.items.length == 0) {
      this.reload()
    }    
  },
  data() {
    return {                    
      fields: [
        'index',
        'action', 
        {key: 'cond', sortable: true}, 
        {key: 'code', sortable: true}, 
        {key: 'description', sortable: true}, 
      ],
      selectedItem: null,
    }
  },
  computed: {
    items () {
      return this.$store.getters.GetAll{{PascalCase .Name}}
    },
    paging () {
      return this.$store.getters.Paging{{PascalCase .Name}}
    },
    sorting () {
      return this.$store.getters.Sorting{{PascalCase .Name}}
    },
    filtering () {
      return this.$store.getters.Filtering{{PascalCase .Name}}
    }
  },   
  methods: {
    resetSorting () {
      this.sortingChanged({sortBy: '', sortDesc: ''})    
    },
    resetFilter () {
      this.filterChanged(true)
    },
    sortingChanged (ctx) {
      this.$store.dispatch('UpdateSorting{{PascalCase .Name}}', {byField: ctx.sortBy, isDesc: ctx.sortDesc})
    },
    filterChanged (isResetFilter) {
      this.$store.dispatch('UpdateFiltering{{PascalCase .Name}}', {isResetFilter: isResetFilter})
    },   
    reload () {      
      this.$store.dispatch('GetAll{{PascalCase .Name}}')
    },    
    dialogClosed () {
      this.selectedItem = null
    },    
    deleteItem (item) {
      this.$swal({
        title: 'Are you sure?',
        text: 'You will delete the item',
        icon: 'warning',
        buttons: true,
        dangerMode: true,
      }).then(willDelete => {
        if (willDelete) {
          this.$store.dispatch('Delete{{PascalCase .Name}}', item.id).then((response) => {
            this.$swal('Record is deleted', response.message, 'success')
          }).catch((error) => {
            this.$swal('Something wrong', error.response.data.message, 'error')
          })  
        }
      })     
    }
  }
}
</script>

<style>

</style>
