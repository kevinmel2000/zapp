package model

{{if HasTime .Fields}}
import ( 
	"time"
) {{end}}

// {{PascalCase .Name}} is
type {{PascalCase .Name}} struct { 
	BaseModel{{range .Fields}}{{if (eq .DataType "enum")}}
	{{PascalCase .Name}} string `` // {{else if (eq .DataType "entity")}}
	{{PascalCase .EntityReference}}ID string `` //
	{{PascalCase .Name}} string `` // {{else}}
	{{PascalCase .Name}} {{.DataType}} `` // {{end}}{{end}}
}

{{if gt (len .TableName) 0}}
// TableName is
func ({{PascalCase .Name}}) TableName() string {
	return "{{.TableName}}"
} {{end}}

// {{PascalCase .Name}}Response is
type {{PascalCase .Name}}Response struct { 
	ID string `json:"id"` // {{range .Fields}}{{if (eq .DataType "enum")}}
	{{PascalCase .Name}} string `json:"{{CamelCase .Name}}"` // {{else if (eq .DataType "entity")}}
	{{PascalCase .EntityReference}} *{{PascalCase .EntityReference}} `json:"{{CamelCase .EntityReference}}"` //
	{{PascalCase .EntityReference}}ID string `json:"{{CamelCase .EntityReference}}ID"` //
	{{PascalCase .Name}} string `json:"{{CamelCase .Name}}"` // {{else}}
	{{PascalCase .Name}} {{.DataType}} `json:"{{CamelCase .Name}}"` // {{end}}{{end}}
}

// Create{{PascalCase .Name}}Request is
type Create{{PascalCase .Name}}Request struct { {{range .Fields}}{{if (eq .DataType "enum")}}
	{{PascalCase .Name}} string `json:"{{CamelCase .Name}}"` // {{else if (eq .DataType "entity")}}
	{{PascalCase .EntityReference}}ID string `json:"{{CamelCase .EntityReference}}ID"` // {{else}}
	{{PascalCase .Name}} {{.DataType}} `json:"{{CamelCase .Name}}"` // {{end}}{{end}}
}

// Update{{PascalCase .Name}}Request is
type Update{{PascalCase .Name}}Request struct { {{range .Fields}}{{if (eq .DataType "enum")}}
	{{PascalCase .Name}} string `json:"{{CamelCase .Name}}"` // {{else if (eq .DataType "entity")}}
	{{PascalCase .EntityReference}}ID string `json:"{{CamelCase .EntityReference}}ID"` // {{else}}
	{{PascalCase .Name}} {{.DataType}} `json:"{{CamelCase .Name}}"` // {{end}}{{end}}
}
